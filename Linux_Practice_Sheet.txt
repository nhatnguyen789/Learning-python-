# Embedded Test Engineer - Linux Practice Sheet

## M·ª•c ti√™u:
L√†m quen v·ªõi l·ªánh Linux, shell scripting v√† c√¥ng c·ª• ph√¢n t√≠ch hi·ªáu nƒÉng.

---
### 1. Basic Linux Commands
- Li·ªát k√™ t·∫•t c·∫£ c√°c file `.c` trong th∆∞ m·ª•c hi·ªán t·∫°i.
- ƒê·∫øm s·ªë d√≤ng trong t·∫•t c·∫£ file `.log`.
- T√¨m t·∫•t c·∫£ file ch·ª©a chu·ªói "ERROR" trong `/var/log/`.
Answer:
a) Li·ªát k√™: 
- ƒê√¢y l√† c√°ch ƒë∆°n gi·∫£n v√† ƒë√∫ng ƒë·ªÉ li·ªát k√™ file .c trong th∆∞ m·ª•c hi·ªán t·∫°i.
	$ ls *.c
üìå G·ª£i √Ω th√™m:
- N·∫øu mu·ªën li·ªát k√™ k√®m chi ti·∫øt (th·ªùi gian, quy·ªÅn, dung l∆∞·ª£ng):
	$ ls -l *.c
- N·∫øu mu·ªën t√¨m m·ªçi file .c trong th∆∞ m·ª•c hi·ªán t·∫°i v√† th∆∞ m·ª•c con, d√πng:
	$ find . -name "*.c"
b) - ƒê·∫øm s·ªë d√≤ng trong t·∫•t c·∫£ file .log
	$ cat *.log | wc -l
- Ho·∫∑c n·∫øu c√≥ nhi·ªÅu file, ho·∫∑c c·∫ßn an to√†n v·ªõi t√™n file ch·ª©a kho·∫£ng tr·∫Øng:
	$ find . -name "*.log" -exec cat {} + | wc -l
c) T√¨m t·∫•t c·∫£ file ch·ª©a chu·ªói "ERROR" trong /var/log/
	$grep -r "ERROR" /var/log
- Gi·∫£i th√≠ch:
-r: t√¨m ƒë·ªá quy trong t·∫•t c·∫£ th∆∞ m·ª•c con
/var/log: l√† ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi
N·∫øu b·∫°n ƒëang ·ªü th∆∞ m·ª•c /, var/log c≈©ng ƒë√∫ng ‚Äî nh∆∞ng n√™n d√πng /var/log ƒë·ªÉ r√µ r√†ng
üìå G·ª£i √Ω th√™m:
ƒê·ªÉ ch·ªâ hi·ªÉn th·ªã t√™n file ch·ª©a chu·ªói, d√πng:
	$ grep -rl "ERROR" /var/log
-------------------------------------------------------
***Ki·∫øn th·ª©c:
üìå grep l√† vi·∫øt t·∫Øt c·ªßa g√¨?
- grep vi·∫øt t·∫Øt t·ª´:
	"globally regular expression print"
Nghƒ©a l√†:
üîé In ra c√°c d√≤ng kh·ªõp v·ªõi bi·ªÉu th·ª©c ch√≠nh quy tr√™n to√†n b·ªô t·ªáp ho·∫∑c d√≤ng d·ªØ li·ªáu.
B·∫°n c√≥ th·ªÉ nghƒ© grep nh∆∞ l√†:
‚úÖ C√¥ng d·ª•ng ch√≠nh c·ªßa grep l√† g√¨?
grep d√πng ƒë·ªÉ:
- T√¨m ki·∫øm d√≤ng ch·ª©a m·ªôt chu·ªói c·ª• th·ªÉ trong file ho·∫∑c output
- C√≥ th·ªÉ d√πng bi·ªÉu th·ª©c ch√≠nh quy ƒë·ªÉ t√¨m n√¢ng cao h∆°n
- H·ªØu √≠ch trong vi·ªác ph√¢n t√≠ch log, test output, t√¨m l·ªói

*** ‚ÄúT√¥i mu·ªën t√¨m d√≤ng n√†o c√≥ t·ª´ n√†y, trong file kia, c√†ng nhanh c√†ng t·ªët!‚Äù ***

üìå M·∫πo ƒë·ªÉ d·ªÖ nh·ªõ:
L·ªánh grep gi·ªëng nh∆∞ 		| Ghi nh·ªõ th·∫ø n√†y
M·ªôt c√°i m√°y d√≤ t√¨m chu·ªói 	| grep = grab (n·∫Øm b·∫Øt chu·ªói)
L·ªçc log ho·∫∑c ƒë·∫ßu ra 		| grep = get results precisely
R·∫•t h·ª£p v·ªõi pipe (` 		| `)

üìù GREP CHEAT SHEET ‚Äì T√åM KI·∫æM CHU·ªñI TRONG LINUX
C√¢u l·ªánh				√ù nghƒ©a
grep "hello" file.txt			T√¨m d√≤ng ch·ª©a "hello" trong file file.txt
grep -i "hello" file.txt		T√¨m "hello" kh√¥ng ph√¢n bi·ªát ch·ªØ hoa/th∆∞·ªùng
grep -r "error" /var/log		T√¨m ƒë·ªá quy t·ª´ /var/log, t·∫•t c·∫£ file con
grep -rl "ERROR" .			Ch·ªâ in t√™n file ch·ª©a "ERROR" trong th∆∞ m·ª•c hi·ªán t·∫°i
grep -n "FAIL" results.txt		Hi·ªÉn th·ªã s·ªë d√≤ng n∆°i xu·∫•t hi·ªán "FAIL"
grep -v "PASS" log.txt			In ra t·∫•t c·∫£ d√≤ng kh√¥ng ch·ª©a "PASS"
grep -c "error" log.txt			ƒê·∫øm s·ªë d√≤ng ch·ª©a "error" trong log.txt
`ps aux					grep firefox`
`dmesg					grep -i usb`
`cat file.txt				grep "^A"`
grep "abc$" file.txt			T√¨m d√≤ng k·∫øt th√∫c b·∫±ng "abc"


üìò M·ªôt s·ªë flag th∆∞·ªùng g·∫∑p c·ªßa grep:
Flag 			| √ù nghƒ©a
-i 			| Kh√¥ng ph√¢n bi·ªát ch·ªØ hoa/th∆∞·ªùng
-r ho·∫∑c -R 		| Duy·ªát ƒë·ªá quy qua th∆∞ m·ª•c
-l 			| Ch·ªâ in ra t√™n file ch·ª©a chu·ªói t√¨m
-n 			| In s·ªë d√≤ng
-v 			| In c√°c d√≤ng kh√¥ng kh·ªõp
-c 			| ƒê·∫øm s·ªë d√≤ng kh·ªõp
-E 			| Cho ph√©p d√πng bi·ªÉu th·ª©c ch√≠nh quy m·ªü r·ªông

üîé Bonus ‚Äì Bi·ªÉu th·ª©c ch√≠nh quy th∆∞·ªùng d√πng:
Bi·ªÉu th·ª©c 		| √ù nghƒ©a
^abc 			| D√≤ng b·∫Øt ƒë·∫ßu b·∫±ng "abc"
xyz$ 			| D√≤ng k·∫øt th√∫c b·∫±ng "xyz"
[0-9] 			| B·∫•t k·ª≥ s·ªë n√†o t·ª´ 0 ƒë·∫øn 9
[A-Za-z] 		| B·∫•t k·ª≥ k√Ω t·ª± ch·ªØ c√°i
. 			| ƒê·∫°i di·ªán cho b·∫•t k·ª≥ k√Ω t·ª± n√†o
* 			| L·∫∑p l·∫°i 0 ho·∫∑c nhi·ªÅu l·∫ßn
\. 			| D·∫•u ch·∫•m th·∫≠t (escape k√Ω t·ª± ƒë·∫∑c bi·ªát)

üìÇ M·∫πo h·ªçc nhanh:
üëâ grep = "t√¨m c√°i m√¨nh c·∫ßn trong ƒë·ªëng d·ªØ li·ªáu"
üëâ Gh√©p grep v·ªõi cat, dmesg, ps, ls, journalctl... c·ª±c k·ª≥ m·∫°nh!

üìò V√≠ d·ª• d·ªÖ nh·ªõ:
üîç T√¨m d√≤ng ch·ª©a "ERROR" trong file log:
$ grep "ERROR" system.log

üîç T√¨m t·∫•t c·∫£ file c√≥ ch·ª©a "FAIL" trong th∆∞ m·ª•c hi·ªán t·∫°i (v√† th∆∞ m·ª•c con):
$ grep -rl "FAIL" .

üîç T√¨m d√≤ng ch·ª©a s·ªë ƒëi·ªán tho·∫°i (bi·ªÉu th·ª©c ch√≠nh quy):
grep -E "[0-9]{3}-[0-9]{3}-[0-9]{4}" contacts.txt


-------------------------------------------------------

### 2. Shell Scripting
- Vi·∫øt script in "Hello" m·ªói 2 gi√¢y, l·∫∑p l·∫°i 5 l·∫ßn.
- Vi·∫øt script ƒë·∫øm s·ªë file `.txt` trong th∆∞ m·ª•c.

-------------------------------------------------------
### 3. File Permission & Navigation
- T·∫°o th∆∞ m·ª•c `test`, v√†o trong ƒë√≥, t·∫°o 3 file `a.txt`, `b.txt`, `c.txt`. ƒê·ªïi quy·ªÅn th√†nh ch·ªâ ƒë·ªçc.
- Ghi l·∫°i ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi c·ªßa file `b.txt`.

-------------------------------------------------------
### 4. Process & System
- Hi·ªÉn th·ªã 5 ti·∫øn tr√¨nh s·ª≠ d·ª•ng nhi·ªÅu CPU nh·∫•t.
- Ghi l·∫°i m·ª©c s·ª≠ d·ª•ng RAM hi·ªán t·∫°i.

-------------------------------------------------------
### 5. Performance/Testing Tools
- D√πng `time` ƒë·ªÉ ƒëo th·ªùi gian ch·∫°y script Python ƒë∆°n gi·∫£n.
- D√πng `top` ƒë·ªÉ ki·ªÉm tra m·ª©c s·ª≠ d·ª•ng CPU trong 10 gi√¢y.

-------------------------------------------------------
### 6. Bonus: Vi·∫øt shell script
- T·∫°o m·ªôt shell script t√™n `check_temp.sh` gi·∫£ l·∫≠p ki·ªÉm tra gi√° tr·ªã nhi·ªát ƒë·ªô (random t·ª´ 30-100). N·∫øu > 70 th√¨ in "Warning".
-------------------------------------------------------